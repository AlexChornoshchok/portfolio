@import url("https://fonts.googleapis.com/css?family=Montserrat:300,400");@import url("https://fonts.googleapis.com/css?family=Raleway:400,500,600,700,800");/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}*,:after,:before{box-sizing:border-box}*{font-size:100.1%}body{font:1rem/1.5 Gilroy,Arial,Helvetica,sans-serif;color:#444}fieldset,form{margin:0;padding:0;border:0}a{color:#0da5af;transition:color .3s ease}a,a:hover{text-decoration:none}img{max-width:100%;height:auto}.clearfix:after{content:"";display:block;clear:both}.ellipsis{white-space:nowrap;text-overflow:ellipsis;overflow:hidden}body{background:#fff;margin:0;font-family:Montserrat,Arial,Helvetica,sans-serif;font-weight:500}h1,h2,h3,h4,h5{font-family:Raleway,Arial,Helvetica,sans-serif;text-align:center;margin:0;padding:0}h1{font-size:3.25rem}h2{font-size:2.25rem}h3{font-size:1.875rem}h4{font-size:1.375rem}h5{font-size:1.25rem;font-weight:500}p{text-align:center;font-weight:400}button,p,ul{margin:0;padding:0}ul{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;list-style:none}a{font-weight:400;font-size:.875rem}.page{position:relative;overflow:hidden}.container{margin:auto;max-width:1170px;padding:40px 5px}.container-max-features{width:100vmax;background-color:#fbfaf8}.container-max-contact{width:100vmax;background-color:#191919}.header{position:absolute;width:100vw;z-index:3}.header-container{margin:0 auto;max-width:1170px;width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.logo{font-family:Raleway,Arial,Helvetica,sans-serif;padding-left:10px}.logo a{font-size:2.125rem;color:#fff}.nav{font-size:.875rem;padding-right:10px}.nav ul{width:640px}.nav ul li{text-align:center}.nav ul li a{display:block;color:#fff}.nav ul li a:hover{color:#c7b299}.nav-btn{display:none;position:relative;left:auto;right:auto;width:24px;z-index:2;list-style:none;margin:10px}.nav-btn:after,.nav-btn:before,.nav-btn span{position:absolute;left:0;right:0;content:"";height:3px;background:#fff;top:50%;margin-top:-1px}.nav-btn:after{margin-top:5px}.nav-btn:before{margin-top:-7px}.btn-main{background-color:#998675;width:170px;height:50px;margin:auto;border-style:none;border-radius:2px;border-bottom:3px solid #736357;font-weight:800;font-family:Raleway,Arial,Helvetica,sans-serif;color:#fff}.btn-item{border-style:none;font:.875rem Montserrat,Arial,Helvetica,sans-serif;background:none;position:relative;border-radius:10px;padding-right:10px}.btn-item:after{content:"";position:absolute;right:-10px;top:3px;border:6px solid transparent}.sl__box{position:relative;height:100%}.sl__img{opacity:.5}.sl__text{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);color:#fff;width:600px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.sl p{padding-bottom:50px}.slick-dots li button{background:#fff;opacity:.5;border-radius:50%}.slick-dots li button:before{content:""}.slick-dots li.slick-active button,.slick-dots li button:hover{background:none;border-radius:50%}.slick-dots li.slick-active button:before,.slick-dots li button:hover:before{border-radius:50%;border:2px solid #fff}.slick-dots{position:absolute;bottom:10px;display:block;width:100%;padding:0;margin:0;list-style:none;text-align:center}.slick-dots li{margin:0 20px}.slick-dotted.slick-slider{margin-bottom:0}.slick-next,.slick-prev{z-index:4}.slick-prev{left:1.5rem}.slick-next{right:1.5rem;transform:translate(-100%)}.slick-next:before,.slick-prev:before{font-size:3rem}.slick-prev:before{content:"<"}.slick-next:before{content:">"}.block{margin:0;padding:0;width:100vw;background-repeat:no-repeat;background-size:cover;background-position:50% 50%}.block-home{background-color:#555556;min-height:0}.block-home h1{font-weight:800}.block-home h2{font-weight:500}.block-main{-ms-flex-wrap:wrap;flex-wrap:wrap;width:100%}.block-about-main,.block-main{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.block-about-main-we{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:49%}.block-about-main-we h3{font-weight:600}.block-about-main-we-line{width:70px;height:3px;background-color:#f1eee9;margin:auto;margin-top:10%}.block-about-main-we:hover{cursor:pointer}.block-about-main-we:hover h4{color:#c7b299}.block-about-main-we:hover .block-about-main-we-line{background-color:#c7b299}.block-about-main h4{line-height:2;color:#555}.block-about-main p{font-size:.875rem;line-height:2;color:#8c8c8c}.block-portfolio{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.block-portfolio-header{width:62.94%;margin:auto}.block-portfolio-header h3{color:#555;font-weight:600;font-size:1.875rem}.block-portfolio-header p{color:#8c8c8c;line-height:2}.block-portfolio-middle{width:62.94%;margin:auto;padding:40px}.block-portfolio-nav ul li{height:32px;border:1px solid #ebebeb;border-radius:2px;margin-left:10px}.block-portfolio-nav ul li:first-child{margin-left:0}.block-portfolio-nav ul li:hover{background-color:#998675;border-color:#998675}.block-portfolio-nav ul li:hover a{color:#fff}.block-portfolio-nav ul li a{color:#8c8c8c;padding:5px 20px 0}.block-portfolio-main-item{width:370px;height:340px;margin-bottom:30px}.block-portfolio-main-item h4{font-size:1.25rem;color:#c7b299}.block-portfolio-main-item p{font-size:.875rem;color:#d1d1d1}.block-portfolio-main-item:hover{cursor:pointer}.block-portfolio-main-item:hover .block-portfolio-main-description{background-color:#362f2d}.block-portfolio-main-item:hover .block-portfolio-main-img img{opacity:.75}.block-portfolio-main-item:hover h4{color:#fff}.block-portfolio-main-item:hover p{color:#c7b299}.block-portfolio-main-item:hover .block-portfolio-main-description:after{border-bottom:10px solid #362f2d}.block-portfolio-main-img{background-size:cover;height:70.59%;overflow:hidden;background-color:#2f2f2f}.block-portfolio-main-img img{height:100%;min-width:100%;min-height:100%}.block-portfolio-main-description{height:29.41%;padding:30px 0 0 30px;background-color:#fbfaf8;position:relative}.block-portfolio-main-description h4{font-size:1.25rem;text-align:left;font-weight:500}.block-portfolio-main-description p{text-align:left}.block-portfolio-main-description:after{content:"";position:absolute;top:-40px;border:30px solid transparent;border-bottom:10px solid #fbfaf8}.block-portfolio-main-btn{margin:auto}.block-features{display:-ms-flexbox;display:flex;width:100%;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;background-color:#fbfaf8;padding:80px 0 0}.block-features-img img{max-width:none;width:420px}.block-features-main h3{text-align:left;padding-bottom:40px;font-weight:800}.block-features-main p{text-align:left;line-height:2;padding-bottom:40px}.block-features-main ul{display:block}.block-features-main ul li{padding-left:50px;line-height:2}.block-features-main ul li span{padding-left:10px}.block-features-main ul li:before{content:">";width:20px;height:20px;border-radius:50%;background-color:#c7b299;color:#fff;font-size:.875rem;padding:0 5px;text-align:center;line-height:0}.block-blog-header{line-height:2;width:725px;margin:auto;padding-bottom:40px}.block-blog-header h3{font-weight:600}.block-blog-main-img{background-size:cover;height:55.7%;overflow:hidden;background-color:#2f2f2f;position:relative}.block-blog-main-img:before{content:"30";height:35px;background-color:#363636;margin:20px 0 0 20px;border-top-left-radius:2px;border-top-right-radius:2px;font-size:1.5rem}.block-blog-main-img:after,.block-blog-main-img:before{width:50px;position:absolute;color:#fff;text-align:center}.block-blog-main-img:after{content:"sep";height:25px;background-color:#252525;margin:-170px 0 0 20px;border-bottom-left-radius:2px;border-bottom-right-radius:2px;font-size:.75rem;z-index:1}.block-blog-main-img img{height:100%;min-width:100%;min-height:100%}.block-blog-main-item{width:370px;height:390px;border:1px solid #f8f8f8}.block-blog-main-item h5{color:#555}.block-blog-main-item p{font-size:.875rem;color:#8c8c8c}.block-blog-main-item:hover{cursor:pointer}.block-blog-main-item:hover .block-blog-main-description{background-color:#362f2d}.block-blog-main-item:hover .block-blog-main-img img{opacity:.75}.block-blog-main-item:hover .block-blog-main-img:before{background-color:#c7b299;opacity:1}.block-blog-main-item:hover .block-blog-main-img:after{background-color:#a48d72}.block-blog-main-item:hover h5{color:#bda992}.block-blog-main-item:hover p{color:#fff}.block-blog-main-description{height:44.3%;padding:30px;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:start;align-items:flex-start}.block-blog-main-description h5,.block-blog-main-description p{text-align:left}.block-blog-main-btn{color:#c7b299}.block-blog-main-btn:after{border-left:8px solid #c7b299}.block-contact-header,.block-pricing,.block-shortcodes{display:none}.block-contact-main{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.block-contact-main-btn{color:#d1d1d1;padding-top:45px}.block-contact-main-btn:after{top:48px;border-left:8px solid #d1d1d1}.block-contact-main-item{width:24%}.block-contact-main-item h3{color:#fff;font-size:1.5rem;text-align:left}.block-contact-main-item spam{text-align:left;color:#363636;line-height:2;font-size:.75rem}.block-contact-main-item p{text-align:left;color:#555;line-height:2;font-size:.875rem}.block-contact-main-item-line{width:100%;height:1px;background-color:#363636}.block-contact-main-item-post{cursor:pointer;padding:10px 0}.block-contact-main-item-post:hover spam{color:#fff}.block-contact-main-item-post:hover p{color:#c7b299}.block-contact-main-item-twitter{padding:10px 0}.block-contact-main-item-twitter:last-child{font-size:.75rem}.block-contact-main-item-twitter p:last-child{color:#343434}.block-contact-main-item-twitter .spam-blue{color:#00bff3}.block-contact-main-item-twitter .spam-gray{color:#959595}.block-contact-main-item-widget{height:210px;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-line-pack:justify;align-content:space-between}.block-contact-main-item-widget img{width:49%;height:49%}.footer{background-color:#111}.footer-container{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.footer-container-first{-ms-flex-pack:start;justify-content:flex-start}.footer-container-second{-ms-flex-pack:end;justify-content:flex-end}.footer-container ul{width:50%}.footer-container ul li{padding-left:10px}.footer-container ul li:first-child{padding-left:none}.footer-container ul li:last-child a{border:none}.footer-container ul li a{color:#434343;font-size:.875rem;border-right:1px solid #434343;padding-right:10px}.footer-container ul li a spam{color:#888}.footer-container ul li a:hover{color:#ad9b85}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-black-webfont.woff2) format("woff2"),url(../fonts/gilroy-black-webfont.woff) format("woff");font-weight:900;font-style:normal}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-blackitalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-blackitalic-webfont.woff) format("woff");font-weight:900;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-bold-webfont.woff2) format("woff2"),url(../fonts/gilroy-bold-webfont.woff) format("woff");font-weight:700;font-style:normal}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-bolditalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-bolditalic-webfont.woff) format("woff");font-weight:700;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-extrabolditalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-extrabolditalic-webfont.woff) format("woff");font-weight:800;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-extrabold-webfont.woff2) format("woff2"),url(../fonts/gilroy-extrabold-webfont.woff) format("woff");font-weight:800;font-style:normal}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-light-webfont.woff2) format("woff2"),url(../fonts/gilroy-light-webfont.woff) format("woff");font-weight:300;font-style:normal}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-lightitalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-lightitalic-webfont.woff) format("woff");font-weight:300;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-medium-webfont.woff2) format("woff2"),url(../fonts/gilroy-medium-webfont.woff) format("woff");font-weight:500;font-style:normal}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-mediumitalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-mediumitalic-webfont.woff) format("woff");font-weight:500;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-regularitalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-regularitalic-webfont.woff) format("woff");font-weight:400;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-regular-webfont.woff2) format("woff2"),url(../fonts/gilroy-regular-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-semibold-webfont.woff2) format("woff2"),url(../fonts/gilroy-semibold-webfont.woff) format("woff");font-weight:600;font-style:normal}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-semibolditalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-semibolditalic-webfont.woff) format("woff");font-weight:600;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-thinitalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-thinitalic-webfont.woff) format("woff");font-weight:100;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-thin-webfont.woff2) format("woff2"),url(../fonts/gilroy-thin-webfont.woff) format("woff");font-weight:100;font-style:normal}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-ultralightitalic-webfont.woff2) format("woff2"),url(../fonts/gilroy-ultralightitalic-webfont.woff) format("woff");font-weight:200;font-style:italic}@font-face{font-family:Gilroy;src:url(../fonts/gilroy-ultralight-webfont.woff2) format("woff2"),url(../fonts/gilroy-ultralight-webfont.woff) format("woff");font-weight:200;font-style:normal}@media screen and (max-width:768px){*{font-size:.875rem}h1{font-size:2.25rem}h2{font-size:1.75rem}h3{font-size:1.25rem}h4,h5{font-size:1rem}.container{padding:30px 3px}.header-nav{display:none}.logo a{font-size:1.25rem}.nav-btn{display:block}.btn-main{width:120px;height:40px}.sl__text{width:500px}.sl p{padding-bottom:30px}.slick-prev{left:1.25rem}.slick-next{right:1.25rem}.slick-next:before,.slick-prev:before{font-size:1.5rem}.block-home{background-image:none}.block-portfolio-header h3{font-size:1.5rem}.block-portfolio-middle{padding:20px;margin:0;width:100%}.block-portfolio-nav{width:728px;padding:0}.block-portfolio-nav ul{width:100%;-ms-flex-pack:distribute;justify-content:space-around}.block-features-img img{width:300px}.block-blog-header{padding-bottom:20px}.block-blog-main-description{padding:20px}.block-contact-main-btn{padding-top:30px}.block-contact-main-btn:after{top:33px}.block-contact-main-item-post{padding:5px 0}.footer-container ul li{padding-left:5px}.footer-container ul li a{padding-right:5px}}@media screen and (max-width:576px){*{font-size:.75rem}h1{font-size:1.85rem}h2,h3{font-size:1rem}h4,h5{font-size:.85rem}.container{padding:20px 2px}.logo a{font-size:1rem}.btn-main{width:100px;height:30px}.sl__text{width:400px}.sl p{padding-bottom:15px}.slick-prev{left:1rem}.slick-next{right:1rem}.slick-next:before,.slick-prev:before{font-size:1rem}.block-about-main{-ms-flex-wrap:wrap;flex-wrap:wrap}.block-about-main-we{width:49%}.block-portfolio-header h3{font-size:1.25rem}.block-portfolio-middle{padding:10px;width:100%;margin:0}.block-portfolio-nav{width:556px;padding:0}.block-portfolio-main-item{width:49%;margin-bottom:10px}.block-features-img img{width:150px}.block-blog-header,.block-features-main h3,.block-features-main p{padding-bottom:10px}.block-blog-header{width:500px}.block-blog-main-img{height:70%}.block-blog-main-item{padding-bottom:10px;width:49%;height:300px}.block-blog-main-description{padding:10px;height:30%}.block-contact-main{-ms-flex-pack:unset;justify-content:unset}.block-contact-main-btn{padding-top:15px}.block-contact-main-btn:after{top:16px}.block-contact-main-item{width:22%;padding-left:2px}.block-contact-main-item:first-child{padding-left:0}.block-contact-main-item-post{padding:2px 0}.block-contact-main-item-widget{height:41%}.footer-container ul li{padding-left:2px}.footer-container ul li a{padding-right:2px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
